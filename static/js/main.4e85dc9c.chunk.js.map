{"version":3,"sources":["components/button/button.component.jsx","assets/functions.js","redux/profile/profile.types.js","pages/homepage/subcomponents/profile-form/profile-form.subcomponent.jsx","redux/profile/profile.selectors.js","components/profile/profile.component.jsx","components/spinner/spinner.component.jsx","components/default-404/default-404.component.jsx","pages/homepage/subcomponents/homepageJSX/homepage.JSX.jsx","pages/homepage/homepage.page.jsx","assets/base-data.js","components/footer/footer.component.jsx","App.js","serviceWorker.js","redux/profile/profile.reducer.js","redux/root-reducer.js","redux/profile/profile.saga.js","redux/root-saga.js","redux/store.js","index.js"],"names":["Button","inverted","children","className","otherProps","payloadAction","type","payload","profileActionTypes","connect","dispatch","lookForProfile","value","useState","inputValue","setInputValue","onSubmit","event","preventDefault","toLowerCase","placeholder","onChange","target","required","selectProfileState","state","profile","selectIsProfile","createSelector","profileState","isProfile","selectIsFetching","isFetching","selectNotFoundMessage","notFoundMessage","selectProfileEssentials","username","login","name","avatarUrl","avatar_url","followers","repos","public_repos","mapStateToProps","createStructuredSelector","url","href","rel","style","background","backgroundSize","backgroundPosition","Spinner","Default404","title","subtitle","icon","src","alt","default404Message","HomePage","socialMedia","pageLink","Footer","map","i","App","Boolean","window","location","hostname","match","INITIAL_STATE","errorMessage","undefined","rootReducer","combineReducers","action","fetchProfileAsync","fetchProfileStart","fetch","gitRef","json","resp","message","put","takeLatest","rootSaga","all","call","sagaMiddleWare","createSagaMiddleWare","middlewares","store","createStore","applyMiddleware","run","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.4e85dc9c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./button.styles.scss\";\r\n\r\nconst Button = ({\r\n  inverted = false,\r\n  children,\r\n  className,\r\n  ...otherProps\r\n}) => {\r\n  return (\r\n    <button className={`custom-button ${className}`} {...otherProps}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","\r\n\r\nexport const changeStateToFalse = (setState,time) =>setTimeout(()=> setState(false),time)\r\n\r\nexport const typeAction = (type)=>({type})\r\nexport const payloadAction = (type,payload) =>({type,payload})","export const profileActionTypes = {\r\n    GET_PROFILE_START:'GET_PROFILE_START',\r\n    GET_PROFILE_SUCCESS:'GET_PROFILE_SUCCESS',\r\n    GET_PROFILE_FAILURE:'GET_PROFILE_FAILURE',\r\n    USER_NOT_FOUND:\"USER_NOT_FOUND\"\r\n}","import React, { useState } from \"react\";\r\nimport Button from \"../../../../components/button/button.component\";\r\nimport \"./profile-form.substyles.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { payloadAction } from \"../../../../assets/functions\";\r\nimport { profileActionTypes } from \"../../../../redux/profile/profile.types\";\r\n\r\nconst ProfileForm = ({ lookForProfile }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const handleChange = (event) => setInputValue(event.target.value);\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    lookForProfile(inputValue.toLowerCase());\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"body__search\">\r\n      <div className=\"search__input\">\r\n        <input\r\n          placeholder=\"Look for Github Profiles...\"\r\n          type=\"text\"\r\n          value={inputValue}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"search__button\">\r\n        <Button type=\"submit\">Search</Button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  lookForProfile: (value) =>\r\n    dispatch(payloadAction(profileActionTypes.GET_PROFILE_START, value)),\r\n});\r\nexport default connect(null, mapDispatchToProps)(ProfileForm);\r\n","import { createSelector } from \"reselect\";\r\n\r\nconst selectProfileState = (state) => state.profile;\r\n\r\nexport const selectIsProfile = createSelector(\r\n  [selectProfileState],\r\n  (profileState) => profileState.isProfile\r\n);\r\nexport const selectIsFetching = createSelector(\r\n  [selectProfileState],\r\n  (profileState) => profileState.isFetching\r\n);\r\nexport const selectNotFoundMessage = createSelector(\r\n    [selectProfileState],\r\n    profileState=> profileState.notFoundMessage\r\n)\r\nexport const selectProfileEssentials = createSelector(\r\n  [selectProfileState],\r\n  (profileState) => ({\r\n    username: profileState.profile.login,\r\n    name: profileState.profile.name,\r\n    avatarUrl: profileState.profile.avatar_url,\r\n    followers: profileState.profile.followers,\r\n    repos: profileState.profile.public_repos,\r\n  })\r\n);\r\n","import React from \"react\";\r\nimport \"./profile.styles.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { selectProfileEssentials } from \"../../redux/profile/profile.selectors\";\r\n\r\nconst Profile = ({ profile }) => {\r\n  const url = `https://github.com/${profile.username}`;\r\n  return (\r\n    <a className=\"homepage__profile\" href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n      <div className=\"profile__header\">\r\n        <div className=\"header__title\">{profile.username}</div>\r\n      </div>\r\n      <div className=\"profile__card\">\r\n        <div className=\"card__left\">\r\n          <div\r\n            className=\"left__avatar\"\r\n            style={{\r\n              background: `url(${profile.avatarUrl})`,\r\n              backgroundSize: 155,\r\n              backgroundPosition: \"center\",\r\n            }}\r\n          ></div>\r\n          <div className=\"left__text\">\r\n            <div className=\"text__name\">{profile.name}</div>\r\n            <div className=\"text__username\">({profile.username})</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"card__right\">\r\n          <div className=\"right__repos\">\r\n            <div className=\"repos__title\">Repos</div>\r\n            <div className=\"repos__number\">{profile.repos}</div>\r\n          </div>\r\n          <div className=\"right__followers\">\r\n            <div className=\"followers__title\">Followers</div>\r\n            <div className=\"followers__number\">{profile.followers}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </a>\r\n  );\r\n};\r\nconst mapStateToProps = createStructuredSelector({\r\n  profile: selectProfileEssentials,\r\n});\r\nexport default connect(mapStateToProps)(Profile);\r\n","import React from 'react';\r\nimport './spinner.styles.scss';\r\n\r\n\r\nconst Spinner = () => {\r\n    return (  \r\n        <div className=\"spinner\">\r\n            <div className='loader'>\r\n                <div className=\"\"></div>\r\n                <div className=\"\"></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Spinner;","import React from \"react\";\r\nimport \"./default-404.styles.scss\";\r\nconst INITIAL_ICON = \"https://i.imgur.com/A040Lxr.png\";\r\nconst Default404 = ({ title, subtitle, icon = INITIAL_ICON }) => {\r\n  return (\r\n    <div className=\"default-404\">\r\n      <div className=\"default-404__icon\">\r\n        <img src={icon} alt=\"\" />\r\n      </div>\r\n      <div className=\"default-404__text\">\r\n        <div className=\"text__title\">{title}</div>\r\n        <div className=\"text__subtitle\">{subtitle}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Default404;\r\n","import React from \"react\";\r\nimport \"./homepageJSX.styles.scss\";\r\nimport ProfileForm from \"../profile-form/profile-form.subcomponent\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport {\r\n  selectIsProfile,\r\n  selectIsFetching,\r\n  selectNotFoundMessage,\r\n} from \"../../../../redux/profile/profile.selectors\";\r\nimport Profile from \"../../../../components/profile/profile.component\";\r\nimport Spinner from \"../../../../components/spinner/spinner.component\";\r\nimport Default404 from \"../../../../components/default-404/default-404.component\";\r\n\r\nconst HomepageJSX = ({ isProfile, isFetching, notFoundMessage }) => {\r\n  const default404Message = {\r\n    title: 'User Not Found',\r\n    subtitle:'Please Try Again or try with another Github Profile'\r\n  }\r\n  return (\r\n    <div className=\"homepage\">\r\n      <div className=\"homepage__header\">\r\n        <div className=\"header__github\">\r\n          <i className=\"fab fa-github\"></i>\r\n        </div>\r\n        <div className=\"header__line\"></div>\r\n        <div className=\"header__finder\">Finder</div>\r\n      </div>\r\n      <div className=\"homepage__body\">\r\n        <div className=\"body__subtitle\">Search Github Profiles Easily</div>\r\n        <ProfileForm />\r\n      </div>\r\n      {isProfile ? (\r\n        <Profile />\r\n      ) : notFoundMessage ? (\r\n        <Default404 title={default404Message.title} subtitle={default404Message.subtitle}/>\r\n      ) : isFetching ? (\r\n        <Spinner />\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  isProfile: selectIsProfile,\r\n  isFetching: selectIsFetching,\r\n  notFoundMessage: selectNotFoundMessage,\r\n});\r\nexport default connect(mapStateToProps)(HomepageJSX);\r\n","import React from \"react\";\r\nimport HomepageJSX from \"./subcomponents/homepageJSX/homepage.JSX\";\r\n\r\n\r\n\r\nconst HomePage = () => {\r\n   \r\n  return <div className=\"homepage\">\r\n      <HomepageJSX/>\r\n  </div>;\r\n};\r\n\r\nexport default HomePage;\r\n","export const socialMedia = [\r\n    {\r\n      icon:'fab fa-facebook-square',\r\n      name:'Facebook',\r\n      pageLink:'https://www.facebook.com/hernan.adrian1'\r\n    },\r\n    {\r\n      icon:'fab fa-instagram',\r\n      name:'Instagram',\r\n      pageLink:'https://www.instagram.com/adrien_v17/'\r\n    }, {\r\n      icon:'fab fa-github',\r\n      name:'Github',\r\n      pageLink:'https://github.com/AdrienV17'\r\n  \r\n    },\r\n  ]","import React from \"react\";\r\nimport \"./footer.styles.scss\";\r\nimport { socialMedia } from \"../../assets/base-data\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer\">\r\n      <div className=\"footer__header\">\r\n        <div className=\"header__title\">Adrien</div>\r\n      </div>\r\n      <div className=\"footer__social-media\">\r\n        {socialMedia.map(({ icon, name,pageLink }, i) => (\r\n          <div key={i} className=\"social-media__social\">\r\n            <i className={icon}></i>\r\n            <a  target='_blank' rel='noopener noreferrer' href={pageLink} className=\"social__name\">{name}</a>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"footer__copyright\">\r\n          <div className=\"copyright__text\">\r\n\r\n      © Copyright Adrien 2020 || All Rights Reserved.\r\n          </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport HomePage from './pages/homepage/homepage.page';\r\nimport Footer from './components/footer/footer.component';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <HomePage/>\r\n      <Footer/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { profileActionTypes } from \"./profile.types\";\r\n\r\nconst INITIAL_STATE = {\r\n  profile: {},\r\n  isProfile: false,\r\n  notFoundMessage: false,\r\n  isFetching: false,\r\n  errorMessage: undefined,\r\n};\r\n\r\nexport const profileReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case profileActionTypes.GET_PROFILE_START:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n        isProfile: false,\r\n      };\r\n    case profileActionTypes.GET_PROFILE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        isProfile: true,\r\n        profile: action.payload,\r\n      };\r\n    case profileActionTypes.GET_PROFILE_FAILURE:\r\n      return {\r\n        ...state,\r\n        errorMessage: action.payload,\r\n      };\r\n    case profileActionTypes.USER_NOT_FOUND:\r\n      return {\r\n        ...state,\r\n        notFoundMessage: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { profileReducer } from \"./profile/profile.reducer\";\r\n\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    profile:profileReducer\r\n})","import { put, takeLatest } from \"redux-saga/effects\";\r\nimport { profileActionTypes } from \"./profile.types\";\r\nimport { payloadAction } from \"../../assets/functions\";\r\n\r\nexport function* fetchProfileAsync(action) {\r\n  try {\r\n    const gitRef = yield fetch(\r\n      `https://api.github.com/users/${action.payload}`\r\n    );\r\n    const resp = yield gitRef.json();\r\n    if (resp.message) {\r\n      yield put(payloadAction(profileActionTypes.USER_NOT_FOUND, resp.message));\r\n    } else {\r\n      yield put(payloadAction(profileActionTypes.GET_PROFILE_SUCCESS, resp));\r\n    }\r\n  } catch (error) {\r\n    yield put(\r\n      payloadAction(profileActionTypes.GET_PROFILE_FAILURE, error.message)\r\n    );\r\n  }\r\n}\r\n\r\nexport function* fetchProfileStart() {\r\n  yield takeLatest(profileActionTypes.GET_PROFILE_START, fetchProfileAsync);\r\n}\r\n","import {all,call} from 'redux-saga/effects';\r\nimport { fetchProfileStart } from './profile/profile.saga';\r\n\r\n\r\nexport default function* rootSaga(){\r\n    yield all([\r\n        call(fetchProfileStart)\r\n    ])\r\n}","import {logger} from 'redux-logger';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { rootReducer } from './root-reducer';\r\nimport createSagaMiddleWare from 'redux-saga'\r\nimport rootSaga from './root-saga';\r\n\r\nconst sagaMiddleWare = createSagaMiddleWare()\r\nconst middlewares = [sagaMiddleWare]\r\n\r\n\r\nif (process.env.NODE_ENV==='development') middlewares.push(logger)\r\n\r\n\r\nexport const store = createStore(rootReducer,applyMiddleware(...middlewares))\r\n\r\nsagaMiddleWare.run(rootSaga)","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}